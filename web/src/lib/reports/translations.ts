/**
 * Translations for report generation
 * Used by PDF and Excel generators
 */

export type ReportLocale = 'pt-BR' | 'en-GB';

export interface ReportTranslations {
  // Status translations
  draft: string;
  submitted: string;
  approved: string;
  rejected: string;
  locked: string;
  
  // Report titles
  summaryReportTitle: string;
  detailedReportTitle: string;
  
  // Labels
  employee: string;
  period: string;
  status: string;
  entries: string;
  totalHours: string;
  date: string;
  startTime: string;
  endTime: string;
  type: string;
  comment: string;
  
  // Summary stats
  total: string;
  approved_plural: string;
  pending: string;
  rejected_plural: string;
  draft_plural: string;
  
  // Metadata
  generatedAt: string;
  employeeLabel: string;
  idLabel: string;
  
  // Footer
  autoGenerated: string;
  pageGenerated: string;
}

const ptBR: ReportTranslations = {
  // Status
  draft: 'Rascunho',
  submitted: 'Enviado',
  approved: 'Aprovado',
  rejected: 'Recusado',
  locked: 'Bloqueado',
  
  // Report titles
  summaryReportTitle: 'Relatório Resumido de Timesheet',
  detailedReportTitle: 'Relatório Detalhado de Timesheet',
  
  // Labels
  employee: 'Colaborador',
  period: 'Período',
  status: 'Status',
  entries: 'Entradas',
  totalHours: 'Total Horas',
  date: 'Data',
  startTime: 'Hora Início',
  endTime: 'Hora Fim',
  type: 'Tipo',
  comment: 'Comentário',
  
  // Summary stats
  total: 'Total',
  approved_plural: 'Aprovados',
  pending: 'Pendentes',
  rejected_plural: 'Recusados',
  draft_plural: 'Rascunho',
  
  // Metadata
  generatedAt: 'Gerado em',
  employeeLabel: 'Colaborador',
  idLabel: 'ID',
  
  // Footer
  autoGenerated: 'Este documento foi gerado automaticamente pelo sistema',
  pageGenerated: 'Página gerada em',
};

const enGB: ReportTranslations = {
  // Status
  draft: 'Draft',
  submitted: 'Submitted',
  approved: 'Approved',
  rejected: 'Rejected',
  locked: 'Locked',
  
  // Report titles
  summaryReportTitle: 'Timesheet Summary Report',
  detailedReportTitle: 'Timesheet Detailed Report',
  
  // Labels
  employee: 'Employee',
  period: 'Period',
  status: 'Status',
  entries: 'Entries',
  totalHours: 'Total Hours',
  date: 'Date',
  startTime: 'Start Time',
  endTime: 'End Time',
  type: 'Type',
  comment: 'Comment',
  
  // Summary stats
  total: 'Total',
  approved_plural: 'Approved',
  pending: 'Pending',
  rejected_plural: 'Rejected',
  draft_plural: 'Draft',
  
  // Metadata
  generatedAt: 'Generated at',
  employeeLabel: 'Employee',
  idLabel: 'ID',
  
  // Footer
  autoGenerated: 'This document was automatically generated by the system',
  pageGenerated: 'Page generated at',
};

/**
 * Get translations for a specific locale
 */
export function getReportTranslations(locale: ReportLocale = 'pt-BR'): ReportTranslations {
  return locale === 'en-GB' ? enGB : ptBR;
}

/**
 * Translate status based on locale
 */
export function translateStatus(status: string, locale: ReportLocale = 'pt-BR'): string {
  const t = getReportTranslations(locale);
  const statusLower = status.toLowerCase();
  
  const statusMap: Record<string, string> = {
    rascunho: t.draft,
    draft: t.draft,
    enviado: t.submitted,
    submitted: t.submitted,
    aprovado: t.approved,
    approved: t.approved,
    recusado: t.rejected,
    rejected: t.rejected,
    bloqueado: t.locked,
    locked: t.locked,
  };
  
  return statusMap[statusLower] || status;
}

/**
 * Format date based on locale
 */
export function formatDate(date: Date | string, locale: ReportLocale = 'pt-BR'): string {
  const d = typeof date === 'string' ? new Date(date) : date;
  return d.toLocaleString(locale, {
    dateStyle: 'long',
    timeStyle: 'short',
  });
}

/**
 * Format date only (no time) based on locale
 */
export function formatDateOnly(date: Date | string, locale: ReportLocale = 'pt-BR'): string {
  const d = typeof date === 'string' ? new Date(date) : date;
  return d.toLocaleDateString(locale);
}

